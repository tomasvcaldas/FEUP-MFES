class CV
types
								 
											 
		public education = <HighSchool> | <FineSecondarySchool> | <Teaching> | <MandatorySchool> | <UniversityCollege> ;
		
		public drivingLicense = <A> | <B> | <C> | <D>;
		
		public language = <Portuguese> | <German> | <English> | <French> | <Italian> | <Polish> | <Spanish> | <Russian>;
		
		
		
values
-- TODO Define values here
instance variables
	hobbies : set of seq of char ;
	skills : set of seq of char;
	workExperience:	set of Job := {};
	
		
operations

public CV: set of seq of char * set of seq of char * set of Job  ==> CV
CV(h,s,we) == (
				hobbies := h;
				skills := s;
				workExperience := we;
				
)

	post hobbies = h and skills = s and workExperience = we;

			pure public getHobbies: () ==> set of seq of char
				getHobbies()  ==
				return hobbies;
				
			pure public getSkills: () ==> set of seq of char
				getSkills()  ==
				return skills;				

			pure public getWorkExperience: () ==> set of Job
				getWorkExperience()  ==
				return workExperience;	
	
	
			public addJob : Job ==> ()
				addJob(j) == 
				workExperience := workExperience union {j}
					pre j not in set workExperience
    			post j in set workExperience;
				
 			public removeJob : Job ==> ()
				removeJob(j) == 
				workExperience := workExperience \ {j}
					pre j  in set workExperience
    			post j not in set workExperience;
    
    			
 			public addHobbies : seq of char ==> ()
				addHobbies(h) == 
				hobbies := hobbies union {h}
					pre h not in set hobbies
    			post h in set hobbies;
				
 			public removeHobbies : seq of char ==> ()
				removeHobbies(h) == 
				hobbies := hobbies \ {h}
					pre h  in set hobbies
    			post h not in set hobbies;
    			   	

 			public addSkill : seq of char ==> ()
				addSkill(s) == 
				skills := skills union {s}
					pre s not in set skills
    			post s in set skills;
				
 			public removeSkill : seq of char ==> ()
				removeSkill(s) == 
				skills := skills \ {s}
					pre s  in set skills
    			post s not in set skills;
    			
    							
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end CV