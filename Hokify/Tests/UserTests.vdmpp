class UserTests is subclass of Tests
types
-- TODO Define types here
values
-- TODO Define values here
instance variables
operations
	
		private testUserParams: () ==> ()
			testUserParams() ==
			(
				dcl u : User := new User("Tomas","Caldas","tomasvcaldas@gmail.com",925302024);
				assert(u.getFirstName() = "Tomas");
				assert(u.getLastName() = "Caldas");
				assert(u.getEmail() = "tomasvcaldas@gmail.com");
				assert(u.getPhoneNumber() = 925302024);
				
			);
			
		private testUserCV: () ==> ()
			testUserCV() ==
			(
				dcl u : User := new User("Tomas","Caldas","tomasvcaldas@gmail.com",925302024);
				dcl googleJob : PastJob := new PastJob("Google","CEO", mk_Job`Date(2007, 03, 12), mk_Job`Date(2007, 09, 12));
				dcl facebookJob : PastJob := new PastJob("Facebook","Tester", mk_Job`Date(2008, 03, 12), mk_Job`Date(2008, 03, 31));
				
				u.createCV();
				assert(u.getCV().getHobbies() = {});
				assert(u.getCV().getSkills() = {});
				assert(u.getCV().getWorkExperience() = {});
				
				assert(googleJob.getCompany() = "Google");
				assert(googleJob.getPosition() = "CEO");
				assert(googleJob.getStartDate() = mk_Job`Date(2007, 03, 12));
				assert(googleJob.getEndDate() =  mk_Job`Date(2007, 09, 12));
				
				assert(facebookJob.getCompany() = "Facebook");
				assert(facebookJob.getPosition() = "Tester");
				assert(facebookJob.getStartDate() = mk_Job`Date(2008, 03, 12));
				assert(facebookJob.getEndDate() =  mk_Job`Date(2008, 03, 31));
				
				u.addPastJob(googleJob);
				assert(u.getCV().getWorkExperience() = {googleJob});
				u.addPastJob(facebookJob);
				assert(u.getCV().getWorkExperience() = {googleJob, facebookJob});
				u.removePastJob(googleJob);
				assert(u.getCV().getWorkExperience() = {facebookJob});
				u.removePastJob(facebookJob);
				assert(u.getCV().getWorkExperience() = {});
				
				u.addHobbie("Drawing");
				assert(u.getCV().getHobbies() = {"Drawing"});
				u.addHobbie("Painting");
				assert(u.getCV().getHobbies() = {"Drawing", "Painting"});
				u.removeHobbie("Painting");
				assert(u.getCV().getHobbies() = {"Drawing"});
				u.removeHobbie("Drawing");
				assert(u.getCV().getHobbies() = {});
				
				u.addSkill("Java");
				assert(u.getCV().getSkills() = {"Java"});
				u.addSkill("C#");
				assert(u.getCV().getSkills() = {"Java", "C#"});
				u.removeSkill("Java");
				assert(u.getCV().getSkills() = {"C#"});
				u.removeSkill("C#");	
				assert(u.getCV().getSkills() = {});			
				
				u.setDriversLicense(<C>);
				assert(u.getCV().getDriversLicense() = <C>);
				
				u.addEducation(<UniversityCollege>);
				assert(u.getCV().getEducation() = {<UniversityCollege>});
			);
	
		

		
		
	public runTests: () ==> ()
		runTests() ==
		(
			testUserParams();
			testUserCV();
		);
			
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end UserTests