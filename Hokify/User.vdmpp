class User
types
-- TODO Define types here
values
-- TODO Define values here
instance variables
		firstName: seq of char;
		lastName: seq of char;
		email: seq of char;
		phonenumber: seq of nat;
		curriculumVitae : CV;
		
operations
	public User(fName: seq of char, lName: seq of char,e: seq of char, p : seq of nat,  cv:CV ) res: User == (
			firstName := fName;
			lastName := lName;
			email := e;
			phonenumber := p;
			curriculumVitae := cv;
	)	
			post res.firstName = fName and res.lastName = lName and res.email = e and res.phonenumber = p and res.curriculumVitae = cv;
			
			pure public getFirstName: () ==> seq of char
				getFirstName() ==
 				 return firstName;
		
			pure public getLastName: () ==> seq of char
				getLastName()  ==
				return lastName;
				
			pure public getEmail: () ==> seq of char
				getEmail()  ==
				return email;
				
			pure public getPhoneNumber: () ==> seq of nat
				getPhoneNumber()  ==
				return phonenumber;
										
			pure public getCV: () ==> CV
				getCV()  ==
				return curriculumVitae;

			public addJob : Job ==> ()
				addJob(j) == 
				curriculumVitae.addJob(j);
				
			public removeJob : Job ==> ()
				removeJob(j) ==
				curriculumVitae.removeJob(j);
		
	
functions



traces
-- TODO Define Combinatorial Test Traces here
end User