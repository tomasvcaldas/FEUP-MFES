class Job
types
								 
	public Date :: year : nat1
								 month: nat1
								 day : nat1
	inv d == 
		if d.year mod 400 = 0 or (d.year mod 100 <> 0 and d.year mod 4 <> 0)
				then d.month < 12 and d.day <= [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31](d.month)
				else d.month < 12 and d.day <= [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31](d.month);



values
-- TODO Define values here
instance variables
	protected company: seq of char;
	protected position: seq of char;


operations

public Job: seq of char * seq of char  ==> Job
Job(c,p) == (
				company:= c;
				position := p;			
)
	post company= c and position= p;
	
	
				pure public getCompany: () ==> seq of char
					getCompany()  ==
					return company;
				
				pure public getPosition: () ==> seq of char
					getPosition()  ==
					return position;				


end Job