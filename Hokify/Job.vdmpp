class Job
types
								 
	public Date :: year : nat1
								 month: nat1
								 day : nat1;

values
-- TODO Define values here
instance variables
	protected company: seq of char;
	protected position: seq of char;


operations

public Job: seq of char * seq of char  ==> Job
Job(c,p) == (
				company:= c;
				position := p;			
)
	post company= c and position= p;
	
	
				pure public getCompany: () ==> seq of char
					getCompany()  ==
					return company;
				
				pure public getPosition: () ==> seq of char
					getPosition()  ==
					return position;				

				public setPosition: seq of char ==> ()
					setPosition(p)  ==
						position := p;
					
				public setCompany: seq of char ==> ()
					setCompany(c)  ==
						company := c;
						


		

		
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Job