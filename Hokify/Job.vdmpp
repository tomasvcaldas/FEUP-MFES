class Job
types
								 
	public Date :: year : nat1
								 month: nat1
								 day : nat1;

values
-- TODO Define values here
instance variables
	company: seq of char;
	position: seq of char;


operations
	public Job(c: seq of char, p: seq of char) res: Job == (
		company := c;
		position := p;

	)
	
	post res.company= c and res.position= p;
	
	
				pure public getCompany: () ==> seq of char
					getCompany()  ==
					return company;
				
				pure public getPosition: () ==> seq of char
					getPosition()  ==
					return position;				

				public setPosition: seq of char ==> ()
					setPosition(p)  ==
						position := p;
					
				public setCompany: seq of char ==> ()
					setCompany(c)  ==
						company := c;
						


		

		
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Job